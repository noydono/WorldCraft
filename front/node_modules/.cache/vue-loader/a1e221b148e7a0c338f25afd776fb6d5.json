{"remainingRequest":"/home/noydono/Documents/Git/WorldCraft/front/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/noydono/Documents/Git/WorldCraft/front/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/home/noydono/Documents/Git/WorldCraft/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/noydono/Documents/Git/WorldCraft/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/noydono/Documents/Git/WorldCraft/front/src/views/Sujet_view.vue?vue&type=template&id=b28cdfb2&scoped=true&","dependencies":[{"path":"/home/noydono/Documents/Git/WorldCraft/front/src/views/Sujet_view.vue","mtime":1619445364305},{"path":"/home/noydono/Documents/Git/WorldCraft/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/noydono/Documents/Git/WorldCraft/front/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/noydono/Documents/Git/WorldCraft/front/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/noydono/Documents/Git/WorldCraft/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/noydono/Documents/Git/WorldCraft/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgInYtY29udGFpbmVyIiwKICAgIHt9LAogICAgWwogICAgICBfYygiaDIiLCB7IHN0YXRpY0NsYXNzOiAiZGlzcGxheS0zIG1iLTMiIH0pLAogICAgICBfYygKICAgICAgICAidi1jYXJkIiwKICAgICAgICB7IHN0YXRpY0NsYXNzOiAibWItOSIsIHN0YXRpY1N0eWxlOiB7IGJvcmRlcjogIjFweCBzb2xpZCBncmV5IiB9IH0sCiAgICAgICAgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJ2LWNhcmQtdGl0bGUiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJibHVlLWdyZXkgbGlnaHRlbi0zIiwKICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyBoZWlnaHQ6ICI1NXB4IiwgcGFkZGluZzogIjAgMCAwIDMwcHggIWltcG9ydGFudCIgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uc3VqZXQudGl0bGUpICsgIiAiKSwKICAgICAgICAgICAgICBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJzdWJ0aXRsZS0yIG1sLWF1dG8gbXItMyIgfSwgWwogICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhfdm0uZGF0ZShfdm0uc3VqZXQuY3JlYXRlZF9hdCkpKQogICAgICAgICAgICAgIF0pCiAgICAgICAgICAgIF0KICAgICAgICAgICksCiAgICAgICAgICBfYygKICAgICAgICAgICAgInYtY2FyZC10ZXh0IiwKICAgICAgICAgICAgeyBzdGF0aWNTdHlsZTogeyBwYWRkaW5nOiAiMCAxMnB4IDAgMTJweCAhaW1wb3J0YW50IiB9IH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJ2LXJvdyIsCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJ2LWNvbCIsCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6CiAgICAgICAgICAgICAgICAgICAgICAgICJkLWZsZXggZmxleC1jb2x1bW4gYWxpZ24tY2VudGVyIGp1c3RpZnktY2VudGVyIiwKICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogIjEwMCUiLAogICAgICAgICAgICAgICAgICAgICAgICAiYm9yZGVyLXRvcCI6ICIxcHggc29saWQgZ3JleSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJib3JkZXItcmlnaHQiOiAiMXB4IHNvbGlkIGdyZXkiCiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgbWQ6ICIyIiB9CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICBfYygic3BhbiIsIFtfdm0uX3YoX3ZtLl9zKF92bS5zdWpldC5hdXRob3IpKV0pLAogICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICJ2LWF2YXRhciIsCiAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm10LTIiLAogICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGNvbG9yOiAib3JhbmdlIiwgc2l6ZTogIjYyIiB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJ3aGl0ZS0tdGV4dCBoZWFkbGluZSIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCI2MiIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBzdGF0aWNDbGFzczogIm10LTIiIH0sIFtfdm0uX3YoIkJ1aWxkZXIiKV0pLAogICAgICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCB7IHN0YXRpY0NsYXNzOiAibXQtMiIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgICBfYygic3Ryb25nIiwgW192bS5fdigiZGF0ZSA6ICIpXSksCiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiIDYvMTIvMjEyMTIgIikKICAgICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCBbCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJzdHJvbmciLCBbX3ZtLl92KCJwb3N0IildKSwKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIgOiAxMjEyIikKICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJ2LWNvbCIsCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAiMTAwJSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJib3JkZXItdG9wIjogIjFweCBzb2xpZCBncmV5IgogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IG1kOiAiMTAiIH0KICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKCJoMiIpLAogICAgICAgICAgICAgICAgICAgICAgX2MoInAiLCB7IHN0YXRpY0NsYXNzOiAibXQtNSB0ZXh0LWp1c3RpZnkiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uc3VqZXQuY29udGVudCkgKyAiICIpCiAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgICAgX2MoImgzIiwgW192bS5fdigiUmVwb25zZSA6IildKSwKICAgICAgX2MoInYtcm93IiwgeyBzdGF0aWNDbGFzczogInVuZGVybGluZSIgfSksCiAgICAgIF92bS5fbChfdm0uY2xvbmVJdGVtcywgZnVuY3Rpb24ocmVwb25zZSwga2V5KSB7CiAgICAgICAgcmV0dXJuIF9jKAogICAgICAgICAgInYtY2FyZCIsCiAgICAgICAgICB7IGtleToga2V5LCBzdGF0aWNDbGFzczogInJlcG9uc2UtY2FyZCBtdC03IiB9LAogICAgICAgICAgWwogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAidi1jYXJkLXRpdGxlIiwKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImJsdWUtZ3JleSBsaWdodGVuLTMgc3VidGl0bGUtMiByZXBvbnNlLWNhcmQtdGl0bGUiCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJzdWJ0aXRsZS0yIG1sLWF1dG8gbXItMyIgfSwgWwogICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKF92bS5kYXRlKHJlcG9uc2UuY3JlYXRlZF9hdCkpKQogICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICBdCiAgICAgICAgICAgICksCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJ2LWNhcmQtdGV4dCIsCiAgICAgICAgICAgICAgeyBzdGF0aWNTdHlsZTogeyBwYWRkaW5nOiAiMCAxMnB4IDAgMTJweCAhaW1wb3J0YW50IiB9IH0sCiAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJ2LXJvdyIsCiAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICJ2LWNvbCIsCiAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOgogICAgICAgICAgICAgICAgICAgICAgICAgICJkLWZsZXggZmxleC1jb2x1bW4gYWxpZ24tY2VudGVyIGp1c3RpZnktY2VudGVyIHJlcG9uc2UtY2FyZC1jb2wtYXV0aG9yIiwKICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgbWQ6ICIyIiB9CiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICBfYygic3BhbiIsIFtfdm0uX3YoX3ZtLl9zKHJlcG9uc2UuYXV0aG9yKSldKSwKICAgICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgInYtYXZhdGFyIiwKICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm10LTIiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgY29sb3I6ICJvcmFuZ2UiLCBzaXplOiAiNjIiIH0KICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAic3BhbiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJ3aGl0ZS0tdGV4dCBoZWFkbGluZSIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiNjIiKV0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBzdGF0aWNDbGFzczogIm10LTIiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIkJ1aWxkZXIiKQogICAgICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCB7IHN0YXRpY0NsYXNzOiAibXQtMiIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJzdHJvbmciLCBbX3ZtLl92KCJkYXRlIDogIildKSwKICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIiA2LzEyLzIxMjEyICIpCiAgICAgICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICAgICAgICBfYygic3BhbiIsIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfYygic3Ryb25nIiwgW192bS5fdigicG9zdCIpXSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIgOiAxMjEyIikKICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICJ2LWNvbCIsCiAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicmVwb25zZS1jYXJkLWNvbC1jb250ZW50IiwKICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgbWQ6ICIxMCIgfQogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgX2MoInAiLCB7IHN0YXRpY0NsYXNzOiAibXQtNSBtbC01IHRleHQtanVzdGlmeSIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiICIgKyBfdm0uX3MocmVwb25zZS5jb250ZW50KSArICIgIikKICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgIDEKICAgICAgICAgICAgKQogICAgICAgICAgXSwKICAgICAgICAgIDEKICAgICAgICApCiAgICAgIH0pLAogICAgICBfdm0ucmVwb25zZXMubGVuZ3RoID49IF92bS5wYWdpbmF0aW9uLnJvd3NQZXJQYWdlCiAgICAgICAgPyBfYygidi1wYWdpbmF0aW9uIiwgewogICAgICAgICAgICBzdGF0aWNDbGFzczogIm10LTQiLAogICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgIGxlbmd0aDogX3ZtLnBhZ2VzLAogICAgICAgICAgICAgIGNpcmNsZTogIiIsCiAgICAgICAgICAgICAgY29sb3I6ICJsaWdodC1ncmVlbiBkYXJrZW4tMSIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgbW9kZWw6IHsKICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnBhZ2luYXRpb24ucGFnZSwKICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oJCR2KSB7CiAgICAgICAgICAgICAgICBfdm0uJHNldChfdm0ucGFnaW5hdGlvbiwgInBhZ2UiLCAkJHYpCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBleHByZXNzaW9uOiAicGFnaW5hdGlvbi5wYWdlIgogICAgICAgICAgICB9CiAgICAgICAgICB9KQogICAgICAgIDogX3ZtLl9lKCksCiAgICAgIF9jKAogICAgICAgICJmb3JtIiwKICAgICAgICB7IG9uOiB7IHN1Ym1pdDogX3ZtLnN1Ym1pdFJlcG9uc2UgfSB9LAogICAgICAgIFsKICAgICAgICAgIF92bS5pc0xvZ2luID09PSB0cnVlCiAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAidi1jYXJkIiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6CiAgICAgICAgICAgICAgICAgICAgIm10LTUgZC1mbGV4IGZsZXgtY29sdW1uIGFsaWduLWNlbnRlciBqdXN0aWZ5LWNlbnRlciIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKCJ2LWNhcmQtdGl0bGUiLCBbCiAgICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCBbX3ZtLl92KCJBam91dGUgdGEgcsOpcG9uc2UiKV0pCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAidi1jYXJkLXRleHQiLAogICAgICAgICAgICAgICAgICAgIHsgc3RhdGljU3R5bGU6IHsgd2lkdGg6ICI1MDBweCIgfSB9LAogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKCJ2LXRleHRhcmVhIiwgewogICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm10LTUiLAogICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBvdXRsaW5lZDogIiIsIGxhYmVsOiAiQ29tbWVudGVyIiwgdmFsdWU6ICIiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5uZXdSZXBvbnNlLmNvbnRlbnQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKCQkdikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLiRzZXQoX3ZtLm5ld1JlcG9uc2UsICJjb250ZW50IiwgJCR2KQogICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogIm5ld1JlcG9uc2UuY29udGVudCIKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgInYtY2FyZC1hY3Rpb25zIiwKICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgInYtYnRuIiwKICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiZmxvYXQtcmlnaHQgbWItNSBtci01IiwKICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyB0eXBlOiAic3VibWl0IiB9LAogICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uX3NldEZvcm0oKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiZW52b3llciIpXQogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICkKICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgIF92bS5pc0xvZ2luID09PSBmYWxzZQogICAgICAgICAgICA/IF9jKAogICAgICAgICAgICAgICAgInYtY2FyZCIsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOgogICAgICAgICAgICAgICAgICAgICJtdC01IGQtZmxleCBmbGV4LWNvbHVtbiBhbGlnbi1jZW50ZXIganVzdGlmeS1jZW50ZXIiCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgW19jKCJ2LWNhcmQtdGV4dCIsIFtfdm0uX3YoIiBjb25uZWN0IHRvaSBwb3VyIGNvbW1lbnRlciAiKV0pXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApCiAgICAgICAgICAgIDogX3ZtLl9lKCkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKQogICAgXSwKICAgIDIKICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}